<?php  

/* 
 * the main menu for Hip Chat archive
 * hook_menu
 */
function hipchat_archive_menu() {
  $items = array();

  $items['hipchat-archive/%/%'] = array(
    'title' => 'Hip chat Archive',
    'description' => 'displays archives of Hip chat',
    'page callback' => '_hipchat_archive_get_data',
    'access callback' => TRUE,
    'page arguments' => array(1,2),
    'title' => 'Archives',
  );

  return $items;
}


function _hipchat_load_includes(){
    module_load_include('inc', 'hipchat_archive', 'hipchat_archive.dbfunctions');
    module_load_include('css', 'hipchat_archive', 'hipchat_archive');
}

/**
 * _hipchat_archive_get_data
 * parameter = $date 
 * if no parameter is given, the default would be today
 * The date of the format(yyyy-mm-dd) is sent to the apichat
 * service and chat history retrieved for that date
 */
function _hipchat_archive_get_data($date = NULL,$url_room_id=Null){
  
  _hipchat_load_includes();
  
  //variable declaration
   $link = 'https://api.hipchat.com/v1/rooms/history?room_id=';
   $output ='';
   $authToken = '&auth_token='.variable_get('chat_room_token');
   $time_zone = 'America/New_York';
   $format = 'json';
   $currDate = date('Y-m-d');
   $formattedData ='';
   
   //check room_id if null or not an int. If not an int
   //use default room_id else use the sent room_id
   if ($url_room_id == Null || (intval($url_room_id) === 0)){
      $room_id = variable_get('chat_room_id');
      if (intval($url_room_id) === 0){
            drupal_set_message(t('Room id must be an integer'), 'error');
      }
    } else {
      $room_id = $url_room_id;
    }
    //check date 
    //if the date clicked is either null or today's date
    //make the current date as today with next day as null
    //else the date clicked can only be less than the current date
    if (strtotime($date) && ($date == Null || $date >= $currDate)){
          if ($date > $currDate) {
               drupal_set_message(t('Cannot retrieve data for date beyond today'), 'error');
              }
              $date = $currDate;
              $nextDate ='';
               
              }
          else{
              $nextDate = date('Y-m-d', strtotime($date .' +1 day'));
             }
			 
   
     //get history from api.hipchat.com for the parameters
    try {
         $dataDb = _hipchat_archive_select_data_fordate($date);
         $saveChatData = array();
         if ($dataDb) {
            $formattedData = _hipchat_archive_format_data($date,$nextDate,$dataDb,$room_id);
        } 
        else 
         { 
          //check if data exists
          $dataDb = _hipchat_archive_getdatawebservice($link,$room_id,$date,$time_zone,$format,$authToken);
          $chatData = (array)$dataDb[0]['chatdata'];
          //retrieve the value for key 'messages'
          //if 'error' then return error message else
          //return data
         if ($dataDb[0]['value'] === 'messages'){
                 $chatDataValue = drupal_json_decode($chatData['data']);
                 $saveChatData[] = array('cdate' => $date,'cdata' => $chatDataValue);
                 _hipchat_archive_save_data($saveChatData);
                 $formattedData = _hipchat_archive_format_data($date,$nextDate,$saveChatData[0],$room_id);
            }  else { 
                drupal_set_message(($dataDb[0]['message']),'error');
                $date = $currDate;
                $nextDate = '';
                $formattedData = _hipchat_archive_format_data($date,$nextDate,$saveChatData,$room_id);
               }
             return $formattedData;
		  
     }
   }
    catch(Exception $e){
       drupal_set_message(t('Issue in retrieving the data. Message = %message, query=%query', 
       array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
     } 
	 
     //return the formatted data
     return $formattedData ; 
}


/**
 * _hipchat_archive_getdatawebservice
 * parameters = $link, 4room_id,$date, $time_zone,$format,$authToken
 * $link = url to connect
 * $room_id = the room for which to get data from 
 * $date = the date for which to get data 
 * $time_zone = require the time zone for eg America/New York
 * $authToken = the token for authentication
 * checks if the webservice returns data or error 
 * error condition: the room may not have been created etc
 * returns an array with 'value' = error or message
 * 'message' = reason for error
 * 'chatdata' => if everything is valid 
 */
function _hipchat_archive_getdatawebservice($link,$room_id,$date,$time_zone,$format,$authToken){
          $dataSend = array();
          //make the http request
          $dataWebService = drupal_http_request($link.$room_id.'&date='.$date.'&timezone='.$time_zone.'&format='.$format.$authToken);
          $arr = (array)$dataWebService;
         //check the key if error or message
           $arrKey = key((array)json_decode(current((array)$arr['data'])));
          //get the message for the error
          $arrValue = (array)json_decode(current((array)$arr['data'])); 
          if ($arrKey === 'error'){
              $arrVal = (array)$arrValue['error'];
              $arrValMessage = $arrVal['message']. ' Returning data for today';
           }
           if ($arrKey === 'error'){
             $dataSend[] = array(
               'value' => $arrKey,
               'message' => $arrValMessage,
               'chatdata' => ''
              );
            } else {
              $dataSend[] = array(
                 'value' => $arrKey,
                 'chatdata' => $dataWebService, 
              );
            }
         //return the combined array
         return $dataSend; 
}


/**
 * _hipchat_archive_format_data
 * parameter = $date, $data, $nextDate
 * formats the data and returns the data in a table format
 * $nextDate are used for creating links
 * $todayDate is used for showing the user that the date on a 
 * page is for that date and hence not a link
 * $data is the chat history for the date selected
 */
function _hipchat_archive_format_data($date,$nextDate,$data,$room_id){
    //variable declaration
    $rows = array();
    $prevDate = date('Y-m-d', strtotime($date .' -1 day')); 
    $prevLink = l(t($prevDate), 'hipchat-archive/'.$prevDate.'/'.$room_id);
    $nextLink = l(t($nextDate), 'hipchat-archive/'.$nextDate.'/'.$room_id);
    $todayLink = l(t($date), 'hipchat-archive/'.$date.'/'.$room_id);
    $build = array();

    //create the header for the table
    $header = array('From','Message','Date');
    if ($data){ 
      $getData = $data['cdata'];
      if (is_array($getData)){
       $result = $getData['messages'];
        }
      else {
       $result = drupal_json_decode($getData);
      }
    //put data into rows
     if ($result){
      foreach($result as $key => $data) {
         $user = $data['from']['name'];
         if (isset($result[$key - 1])) {
           $pre_user = $result[$key - 1]['from']['name'];
           } else {
          $pre_user = '';
          }
    
        if ($user == $pre_user) {
          $user = '';
        }
        else {
          $user = $user.l(t("  #"), 'hipchat-archive/'.$date.'/'.$room_id);
        }
    
       $rows[] = array(
           $user,
           $data['message'],
           $data['date'],
       ); 
     }
    }
  else {
     drupal_set_message(t('No data available for the selected date.'));
  }
  }
  
  $build['links'] = array(
   '#markup' => '<p id="prevlink">'.$prevLink.'
                 <span id="todaylink">' .$date.
                 '<span id="nextlink">'.$nextLink.'</p>',
    '#attached' => array (
           'css' => array (
                 drupal_get_path('module', 'hipchat_archive') . '/hipchat_archive.css' ,
                 )
              )
            );				 
 
  $build['data'] =  array(
     '#theme' => 'table',
     '#header' => $header, 
     '#rows' => $rows);

  //return formatted output
  return $build;
}