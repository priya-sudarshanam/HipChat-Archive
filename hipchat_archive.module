<?php  

/* 
 * the main menu for Hip Chat archive
 * hook_menu
 */
function hipchat_archive_menu() {
  $items = array();

  $items['hipchat-archive/%/%'] = array(
    'title' => 'Hip chat Archive',
    'description' => 'displays archives of Hip chat',
    'page callback' => '_hipchat_archive_get_data',
    'access callback' => TRUE,
    'page arguments' => array(1,2),
    'title' => 'Archives',
  );

  return $items;
}

/**
 * _hipchat_date_check
 * parameter = $date 
 * return = boolean
 * if the date is in the correct format and the month, day and year
 * are ints, then return true
 */
  function _hipchat_date_check($date){
    $val = strtotime($date);
    //check the value of $val
    //if date is anything other than valid date
    //return false
    if (!$val){
        $exp = explode('-', $date);
        $month = $exp[1];
        $day = $exp[2];
        $year = $exp[0];
        if (intval($month) || intval($day) || intval($year)){
           return (checkdate($month,$day,$year)); 
        }
     }
 
    return false;
 }
 
 /**
 * _hipchat_room_id_check
 * parameter = $url_room_id
 * checks if the room_id is a valid int
 */
 function _hipchat_room_id_check($url_room_id){
  $bool = false;
  if (intval($url_room_id) === 0){
     $bool = true;     
 }
   return $bool;
 }
 
/**
 * _hipchat_archive_get_data
 * parameter = $date 
 * if no parameter is given, the default would be today
 * The date of the format(yyyy-mm-dd) is sent to the apichat
 * service and chat history retrieved for that date
 */
function _hipchat_archive_get_data($date = NULL,$room_id=575239){
  //variable declaration
  $link = 'https://api.hipchat.com/v1/rooms/history?room_id='; 
  $output = '';
  $authToken = '&auth_token=f9f12e58a0df9ed77e14094a5eacb1';
  $time_zone = 'America/New_York';
  $format = 'json';
  $currDate = date('Y-m-d');
  $formattedData = '';
 
  //check room_id 
  //if null or is not int, make room_id default
  if ($url_room_id == Null || _hipchat_room_id_check($url_room_id)){
      $room_id = 575239;
      if (_hipchat_room_id_check($url_room_id)){
         drupal_set_message(t('Room id needs to be of type integer'), 'error');
        }
    } else {
      $room_id = $url_room_id;
    }

  //check date 
  //check if the date is a valid date else return an error
  if (!_hipchat_date_check($date)){
     drupal_set_message(t('Invalid date. Pls enter a valid date'), 'error');
  } else {
   if (_hipchat_date_check($date)){
      if ($date == Null || $date >= $currDate){
      // $currDate = '2014-05-30';
      $date = $currDate;
      $nextDate ='';
      
	  if ($date > $currDate) {
         drupal_set_message(t('Cannot retrieve data for date beyond today'), 'error');
       } 
     }
     else{
       $nextDate = date('Y-m-d', strtotime($date .' +1 day'));
     }
   
     //get history from api.hipchat.com for the parameters
    try {
       $chatData = file_get_contents($link.$room_id.'&date='.$date.'&timezone='.$time_zone.'&format='.$format.$authToken);	   
     }
    catch(Exception $e){
       drupal_set_message(t('Issue in retrieving the data. Message = %message, query=%query', 
       array('%message' =>$e->getMessage(),'%query' => $e->query_string)), 'error');
     } 
	 
	$jsonDecodedData = drupal_json_decode($chatData);
    $savedData = _hipchat_parse_save_data($jsonDecodedData, $date);
    if ($savedData){
	   $formattedData = format_ChatData($date,$nextDate,$room_id);	
	}
	 //return the formatted data
	 return $formattedData;
     }
	}
}
 
/**
 * _hipchat_parse_save_data
 * parameter = $data
 * extracts the date and message and saves it
 * to the db
 * return True in case of success and false otherwise
 */ 
 function _hipchat_parse_save_data($data){
   $success = false;
   $saveChatData[] = array(
     'cdate' => $date,
	 'cdata' => $data,   
   );
   
   $success = hipchat_save_data($saveChatData);
  
  return $success; 
  } 
  
  
 
/**
 * _hipchat_archive_format_data
 * parameter = $prevDate, $todayDate, $data, $nextDate
 * formats the data and returns the data in a table format
 * $prevDate,$nextDate are used for creating links
 * $todayDate is used for showing the user that the date on a 
 * page is for that date and hence not a link
 * $data is the chat history for the date selected
 */
function _hipchat_archive_format_data($date,$nextDate,$room_id){
  //variable declaration
  $rows = array();
	$prevDate = date('Y-m-d', strtotime($date .' -1 day')); 
	$prevLink = l(t($prevDate), 'hipchat/'.$prevDate.'/'.$room_id);
	$nextLink = l(t($nextDate), 'hipchat/'.$nextDate.'/'.$room_id);
	$todayLink = l(t($date), 'hipchat/'.$date.'/'.$room_id);
	$build = array();

	//create the header for the table
	$header = array('From','Message','Date');
	$data = hipchat_select_data_id($date);
  	$getData = $data['cdata'];
	$result = drupal_json_decode($getData);

    //put data into rows
    foreach($result as $key => $data) {
	   $user = $data['from']['name'];
	   if (isset($result[$key - 1])) {
          $pre_user = $result[$key - 1]['from']['name'];
         } else {
         $pre_user = '';
        }
    
    if ($user == $pre_user) {
      $user = '';
    }
    
    $rows[] = array(
          $user,
          $data['message'],
          $data['date'],
    ); 
  }

  $spaces = str_repeat('&nbsp;', 75);
  $build['links'] = array(
   '#markup' => '<p id="prevlink">'.$prevLink.'
                 <span id="todaylink">' .$date.
				 '<span id="nextlink">'.$nextLink.'</p>',
    '#attached' => array (
	     'css' => array (
		    drupal_get_path('module', 'hipchat') . '/hipchat_archive.css' ,
		   				)
				)
			 );				 
 
  $build['data'] =  array(
     '#theme' => 'table',
	 '#header' => $header, 
	 '#rows' => $rows);

  //return formatted output
  return $build;
 // theme('table', array('header' => $header, 'rows' => $rows));
    		
   //return formatted output*/
  // return $output;
 
  }